/* 
Positions in css
1. Static: default value , element is placed in its original position in the normal flow of the document.
Top, Bottom, Left, Right properties have no effect on static positioned elements.

2. Relative: element is positioned relative to its normal position. The element will still be in the normal flow of the document, but it will be offset from its normal position.
Top, Bottom, Left, Right properties can be used to move the element in any direction.

3. Absolute: element is positioned relative to its nearest positioned ancestor. If an absolute positioned element has no positioned ancestors, it uses the document body, and moves along with page scrolling.
make parent element position relative to make child element position absolute.

4. Fixed: element is positioned relative to the viewport, which means it always stays in the same place even if the page is scrolled.

5. Sticky: element is positioned based on the user's scroll position. A sticky element toggles between relative and fixed, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it "sticks" in place (like position:fixed).
*/
body{
    font-family: Arial, sans-serif;
    margin: 3;
    padding: 0;
    border: 1px solid rgb(88, 88, 88);
}
p{
    border: 1px solid rgb(88, 88, 88);
    padding: 10px;
    margin: 10px;
}
.static{
    position: static; /* default value */
    top: 100px;
    left: 100px;
    height: 200px;
}
.relative{
    position: relative;
    bottom: 100px;
    left: 100px;
    /* right: 100px; */
    background-color: blueviolet;
}
.absolute{
    position: absolute;
    top: 100px;
    left: 100px;    
    right: 100px;
    background-color: rgb(255, 0, 0);
}

.fixed{
    position: fixed;
    top: 100px;
    left: -10px;
    background-color: aquamarine;
}
div{
    padding: 10px;
    height: 1000px;
    background-color: rgb(0, 255, 0);
}
.sticky{
    position: sticky;
    top: 0;
}